-- Code a cheta to win (WIP)

local RS = game:GetService("RunService")
local plr = Players.LocalPlayer
function ge() return getgenv() end

ge().CACTWdata = ge().CACTWdata or {}
ge().CACTWdata.RenderConnections = ge().CACTWdata.RenderConnections or {}

local isoparts = {
    ["white"] = workspace.WhiteZone,
    ["red"] = workspace["Really redZone"],
    ["black"] = workspace.BlackZone,
    ["blue"] = workspace["Really blueZone"],
    ["green"] = workspace.CamoZone,
    ["magenta"] = workspace.MagentaZone,
    ["yellow"] = workspace["New YellerZone"]
}

local function BindRender(name, func, con)
	con = con or RS.RenderStepped
	table.insert(ge().CACTWdata.RenderConnections, {["Name"] = name, ["Connection"] = con:Connect(func)})
end

local function UnbindRender(name)
	for i, connection in pairs(ge().CACTWdata.RenderConnections) do
		if connection.Name == name then
			connection.Connection:Disconnect()
			table.remove(ge().CACTWdata.RenderConnections, i)
		end
	end
end

local function RebindRender(name, func, con)
	UnbindRender(name)
	BindRender(name, func, con)
end

local function IsRender(name)
	local counted = 0
	for i, connection in pairs(ge().CACTWdata.RenderConnections) do
		if connection.Name == name then
			counted = counted + 1
		end
	end
	return counted > 0, counted
end

function isocol(col)
    for _, isop in pairs(isoparts) do
        if isop:FindFirstChild("Lock") and isop.Lock:FindFirstChild("Part") then
            isop.Lock.Part.CanCollide = col
        end
    end
end

function respawn()
    local root = getRoot(plr.Character)
    local pos = nil
    if root then
    pos = root.CFrame
    end
    plr.CharacterAdded:Wait():WaitForChild("HumanoidRootPart")
    root = getRoot(plr.Character)
    if root and pos then
        root.CFrame = pos
    end
end

function isopartadded(fol)
    if fol:IsA("Folder") and fol.Name == "Lock" then
        respawn()
    end
end

for _, isopart in pairs(isoparts) do
    isopart.ChildAdded:Connect(isopartadded)
end

function hasiso(team)
    local part = isoparts[team.Name]
    if part:FindFirstChild("Lock") then
        return true
    end
end

function hookplr(Plr)
    Plr.CharactedAdded:Cnnection(function()
        if Plr ~= plr and Plr.Team ~ plr.Team and Plr.Team then
            if hasiso(plr.Team) then
                respawn()
            end
        end
    end)
end

Players.PlayerAdded:connect(hookplr)
for _, Plr in pairs(Players:GetPlayers()) do
    hookplr(Plr)
end

CACTW = {
    ["PluginName"] = "CACTW",
    ["PluginDescription"] = "Code a cheat to win, for 'build a boat'",
    ["Commands"] = {
        ["antiisolation"] = {
            ["ListName"] = "antiisolation / antiiso [on/off]",
            ["Description"] = "Isolation mode does not affect you",
            ["Aliases"] = {"antiiso"},
            ["Function"] = function(args, speaker)
                local arg = tostring(args[1]):lower()
                if arg == "on" then
                    RebindRender("ANTI_ISO", function()
                        isocol(false)
                    end, RS.Stepped)
                    notify("Anti-iso", "Anti-iso was turned enabled")
                elseif arg == "off" then
                    UnbindRender("ANTI_ISO")
                    isocol(true)
                    notify("Anti-iso", "Anti-iso was turned disabled")
                else
                    notify("Invalid argument. Do (on/off)")
                end
            end
        }
    }
}

return CACTW